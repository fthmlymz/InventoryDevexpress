Features - Companies - Query - GetCompanyListWithPagination  SÝLÝNECEK
companyController içerisinde CompanyWithPagination iþaretli silinecek





docker-compose yedek
version: '3.4'

services:
  inventorymanagement.api:
    image: ${DOCKER_REGISTRY-}inventorymanagementapi
    container_name: "InventoryManagement.API"
    restart: "always"
    ports:
      - "4002:80"
      - "4003:443"
    build:
      context: .
      dockerfile: src/InventoryManagement/Backend/WebAPI/InventoryManagement.API/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=https://*:4003;http://*:4002
      - ASPNETCORE_Kestrel__Certificates__Default__Password=1234
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/app/ssl/wilcard2024.enerya.com.tr.pfx
      - ConnectionStrings__SqlServerConnection=Server=host.docker.internal,1433;Database=IMDB;User=sa;Password=Aa123456789*-+;TrustServerCertificate=True
      - ConnectionStrings__CapLogSqlServerConnection=Server=host.docker.internal,1433;Database=CapLog;User=sa;Password=Aa123456789*-+;TrustServerCertificate=True
      - ConnectionStrings__SeriLogConnection=Server=host.docker.internal,1433;Database=NlogDb;User=sa;Password=Aa123456789*-+;TrustServerCertificate=True
      - RedisConnectionSettings__RedisURL=host.docker.internal
      - RedisConnectionSettings__PreferRedis=false
      - RedisConnectionSettings__Port=6379
      - RedisConnectionSettings__Database=0
      - RedisConnectionSettings__DefaultExpiration=00:01:00
      - RabbitMQ__Host=host.docker.internal
      - RabbitMQ__Username=guest
      - RabbitMQ__Password=guest
      - RabbitMQ__Port=5672
      - SerilogSeqUrl=http://seq:5341/
      - Serilog__MinimumLevel__Default=Warning
      - Keycloak__Authority=http://localhost:8080/realms/inventory_management_realm
      - Keycloak__ClientCredentialsTokenRequest__Address=http://localhost:8080/realms/inventory_management_realm/protocol/openid-connect/token
      - Keycloak__ClientCredentialsTokenRequest__ClientId=InventoryManagementClient
      - Keycloak__ClientCredentialsTokenRequest__ClientSecret=FqCf5sQeJTPEJjYzD8XtwZWoeg5cPGv8
      - Keycloak__KeycloakResourceUrl=http://localhost:8080/realms/inventory_management_realm/authz/protection/resource_set/
      - Keycloak__GrantType=password
      - Keycloak__GrantTypePermission=urn:ietf:params:oauth:grant-type:uma-ticket
      - Keycloak__ClientSecret=FqCf5sQeJTPEJjYzD8XtwZWoeg5cPGv8
      - Keycloak__ClientId=InventoryManagementClient
      - Keycloak__Realm=InventoryManagementClient
      - Keycloak__Audience=InventoryManagementClient
      - Keycloak__TokenEndpoint=http://localhost:8080/realms/inventory_management_realm/protocol/openid-connect/token
      - Keycloak__UserInfoEndpoint=http://localhost:8080/realms/inventory_management_realm/protocol/openid-connect/userinfo
      - Keycloak__TokenPermissionsEndpoint=http://localhost:8080/realms/inventory_management_realm/protocol/openid-connect/token
    volumes:
      - ./src/InventoryManagement/Backend/WebAPI/InventoryManagement.API/ssl:/app/ssl

  inventorymanagement.frontend:
    image: ${DOCKER_REGISTRY-}inventorymanagementfrontend
    container_name: "InventoryManagement.Frontend"
    restart: "always"
    ports:
      - "4005:80"
      - "4004:443"
    build:
      context: .
      dockerfile: src/InventoryManagement/Frontend/InventoryManagement.Frontend/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=https://*:4004;http://*:4005
      - ASPNETCORE_Kestrel__Certificates__Default__Password=1234
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/app/ssl/wilcard2024.enerya.com.tr.pfx
      - GatewayAddress=https://localhost:4000
    depends_on:
      - inventorymanagement.api
    volumes:
      - ./src/InventoryManagement/Frontend/InventoryManagement.Frontend/ssl:/app/ssl


#  inventorymanagement.db:
#    image: "mcr.microsoft.com/mssql/server:2022-latest"
#    container_name: "MsSqlServer"
#    restart: "always"
#    environment:
#      SA_PASSWORD: "Aa123456789*-+"
#      ACCEPT_EULA: "Y"
#    ports:
#      - "1433:1433"
#    volumes:
#      - mssql-data:/var/opt/mssql

#  redis:
#    image: "redis"
#    container_name: "Redis"
#    restart: "always"
#    ports:
#      - "6379:6379"

#  rabbitmq:
#    image: "rabbitmq:3-management"
#    container_name: "RabbitMQ"
#    restart: "always"
#    ports:
#      - "5672:5672"
#      - "15672:15672"

volumes:
  mssql-data:

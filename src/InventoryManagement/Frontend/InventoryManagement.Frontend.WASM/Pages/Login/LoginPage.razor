@layout LoginLayout
@page "/login"
@using InventoryManagement.Frontend.Models.Keycloak;
@using System.Text.Json;
@using InventoryManagement.Frontend.Services.Authorization;
@using InventoryManagement.Frontend.Services;

@inject ApiService ApiService
@inject NotificationService NotificationService
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider authenticationStateProvider


<RadzenCard class="rz-my-12 rz-mx-auto rz-p-4 rz-p-md-12" style="max-width: 600px;">
    <RadzenTemplateForm TItem="LoginModel" Data="@loginModel">
        <RadzenLogin AllowRegister="true"
                     AllowResetPassword="true"
                     Username="@loginModel.Username"
                     Password="@loginModel.Password"
                     AllowRememberMe="true"
                     RememberMe="@rememberMe"
                     Login=@(args => OnLogin(args, "Varsayılan değerle gir"))
                     ResetPassword=@(args => OnResetPassword(args, "Varsayılan değerle gir"))
                     Register=@(args => OnRegister("Varsayılan değerle kayıt ol")) />
    </RadzenTemplateForm>
</RadzenCard>

@code {
    LoginModel loginModel = new LoginModel();
    bool rememberMe = true;



    async Task OnLogin(LoginArgs args, string name)
    {
        loginModel.Username = args.Username;
        loginModel.Password = args.Password;
        await ((KeycloakAuthenticationStateProvider)authenticationStateProvider).LoginAsync(loginModel.Username, loginModel.Password);
        var userInfo = ((KeycloakAuthenticationStateProvider)authenticationStateProvider).UserInfo;
    }

    void OnRegister(string name)
    {
        // Kayıt işlemi burada yapılabilir
    }

    void OnResetPassword(string value, string name)
    {
        // Şifre sıfırlama işlemi burada yapılabilir
    }
}

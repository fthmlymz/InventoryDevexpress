@page "/company/company-details"
@using InventoryManagement.Frontend.DTOs.Brand
@using InventoryManagement.Frontend.DTOs.Category



@inherits ComponentBase

<div class="container-fluid">
    
    @if (brandModel != null && brandModel.data != null && categoryModel != null && categoryModel.data != null) {
        <div class="row">
            <RadzenTabs>
                <Tabs>
                    @if (_authorizationService.HasPermission("res:category", "scopes:read"))
                    {
                        <RadzenTabsItem Text="Kategori/Alt Kategori">
                            <div class="row">
                                @if (_authorizationService.HasPermission("res:category", "scopes:read"))
                                {
                                    <div class="col-md-6">
                                        <div class="rz-shadow-4">
                                            <RadzenCard Style="margin-bottom:20px">
                                                <div style="display: flex; justify-content: space-between; align-items: center;">
                                                    <div>Ana Kategori</div>
                                                    @if (_authorizationService.HasPermission("res:category", "scopes:create"))
                                                    {
                                                        <RadzenButton ButtonStyle="ButtonStyle.Success" Icon="add_circle_outline" class="mt-2 mb-4" Text="Yeni Kategori" Click="@((args) => InsertRowCategory(new CategoryDto()))" Disabled="@(categoryToInsert != null || categoryToUpdate != null)" />
                                                    }
                                                </div>
                                                <RadzenDataGrid @ref="categoryGrid" ColumnWidth="200px" AllowFiltering="true" AllowSorting="true" RowUpdate="@OnUpdateRowCategory" RowCreate="@OnCreateRowCategory"
                                                                Data="@categoryModel?.data" TItem="CategoryDto" @bind-Value="@SelectedCategory" EditMode="DataGridEditMode.Single" Style="max-height: 75vh;">
                                                    <Columns>
                                                        <RadzenDataGridColumn TItem="CategoryDto" Property="Id" Title="Id" Width="80px" />


                                                        <RadzenDataGridColumn TItem="CategoryDto" Property="Name" Title="Kategori Adı" Width="100%">
                                                            <EditTemplate Context="category">
                                                                <RadzenTextBox @bind-Value="category.Name" style="width: 100%" Name="Name"></RadzenTextBox>
                                                                <RadzenRequiredValidator style="display: grid" Component="Name" Text="Kategori adı zorunludur" Popup="true" />
                                                            </EditTemplate>
                                                        </RadzenDataGridColumn>

                                                        <RadzenDataGridColumn TItem="CategoryDto" Context="category" Filterable="false" Sortable="false" TextAlign="TextAlign.Right" Width="156px">
                                                            <Template Context="category">
                                                                @if (_authorizationService.HasPermission("res:category", "scopes:update"))
                                                                {
                                                                    <RadzenButton Icon="edit" ButtonStyle="ButtonStyle.Light" Style="border-radius: 50%;" Variant="Variant.Flat" Size="ButtonSize.Medium" Click="@(args => EditRowCategory(category))" @onclick:stopPropagation="true"></RadzenButton>
                                                                }
                                                                @if (_authorizationService.HasPermission("res:category", "scopes:delete"))
                                                                {
                                                                    <RadzenButton ButtonStyle="ButtonStyle.Danger" Style="border-radius: 50%;" Icon="delete" Variant="Variant.Flat" Shade="Shade.Lighter" Size="ButtonSize.Medium" class="my-1 ms-1" Click="@(args => DeleteRowCategory(category))" @onclick:stopPropagation="true"></RadzenButton>
                                                                }
                                                            </Template>

                                                            <EditTemplate Context="category">
                                                                @if (_authorizationService.HasPermission("res:category", "scopes:update"))
                                                                {
                                                                    <RadzenButton Icon="check" ButtonStyle="ButtonStyle.Success" Style="border-radius: 50%;" Variant="Variant.Flat" Size="ButtonSize.Medium" Click="@((args) => SaveRowCategory(category))"></RadzenButton>
                                                                    <RadzenButton Icon="close" ButtonStyle="ButtonStyle.Light" Style="border-radius: 50%;" Variant="Variant.Flat" Size="ButtonSize.Medium" class="my-1 ms-1" Click="@((args) => CancelEditCategory(category))"></RadzenButton>
                                                                }
                                                                @if (_authorizationService.HasPermission("res:category", "scopes:delete"))
                                                                {
                                                                    <RadzenButton ButtonStyle="ButtonStyle.Danger" Style="border-radius: 50%;" Icon="delete" Variant="Variant.Flat" Shade="Shade.Lighter" Size="ButtonSize.Medium" class="my-1 ms-1" Click="@(args => DeleteRowCategory(category))"></RadzenButton>
                                                                }
                                                            </EditTemplate>

                                                        </RadzenDataGridColumn>

                                                    </Columns>
                                                </RadzenDataGrid>
                                            </RadzenCard>
                                        </div>
                                    </div>
                                }

                                <div class="col-md-6">
                                    <div class="rz-shadow-4">
                                        <RadzenCard Style="margin-bottom:20px">
                                            @if (SelectedCategory != null && SelectedCategory.Any() && SelectedCategory.First().Id != 0)
                                            {
                                                <RadzenCard Style="margin-bottom:20px">
                                                    <div style="display: flex; justify-content: space-between; align-items: center;">
                                                        <div>Seçilen Ana Kategori:</div>
                                                        <div>
                                                            @if (_authorizationService.HasPermission("res:categorysub", "scopes:create"))
                                                            {
                                                                <RadzenButton ButtonStyle="ButtonStyle.Success" Icon="add_circle_outline" class="mt-2 mb-4" Text="Yeni Alt Kategori" Click="@((args) => InsertRowCategorySub(new CategorySubModel()))" Disabled="@(categorySubToInsert != null || categorySubToUpdate != null)" />
                                                            }
                                                        </div>
                                                    </div>
                                                    <b>@SelectedCategory.First().Name</b>
                                                </RadzenCard>

                                                <RadzenTabs>
                                                    <Tabs>
                                                        <RadzenTabsItem Text="Alt Kategoriler">
                                                            <RadzenDataGrid @ref="categorySubGrid" AllowFiltering="true" AllowPaging="true" AllowSorting="true" Data="@(SelectedCategory?.FirstOrDefault()?.CategorySubs)" TItem="CategorySubModel"
                                                                            RowUpdate="@OnUpdateRowCategorySub" RowCreate="@OnCreateRowCategorySub" EditMode="DataGridEditMode.Single">
                                                                <Columns>
                                                                    <RadzenDataGridColumn TItem="CategorySubModel" Property="Id" Title="Id" />
                                                                    <RadzenDataGridColumn TItem="CategorySubModel" Property="Name" Title="Alt Kategori Adı">
                                                                        <EditTemplate Context="categorySub">
                                                                            <RadzenTextBox @bind-Value="categorySub.Name" style="width: 100%" Name="Name"></RadzenTextBox>
                                                                            <RadzenRequiredValidator style="display: grid" Component="Name" Text="Alt kategori adı zorunludur" Popup="true" />
                                                                        </EditTemplate>
                                                                    </RadzenDataGridColumn>

                                                                    <RadzenDataGridColumn TItem="CategorySubModel" Property="CategoryId" Title="Kategori Id" />

                                                                    <RadzenDataGridColumn TItem="CategorySubModel" Context="categorySub" Filterable="false" Sortable="false" TextAlign="TextAlign.Right" Width="156px">
                                                                        <Template Context="categorySub">
                                                                            @if (_authorizationService.HasPermission("res:categorysub", "scopes:update"))
                                                                            {
                                                                                <RadzenButton Icon="edit" ButtonStyle="ButtonStyle.Light" Style="border-radius: 50%;" Variant="Variant.Flat" Size="ButtonSize.Medium" Click="@(args => EditRowCategorySub(categorySub))" @onclick:stopPropagation="true"></RadzenButton>
                                                                            }
                                                                            @if (_authorizationService.HasPermission("res:categorysub", "scopes:delete"))
                                                                            {
                                                                                <RadzenButton ButtonStyle="ButtonStyle.Danger" Style="border-radius: 50%;" Icon="delete" Variant="Variant.Flat" Shade="Shade.Lighter" Size="ButtonSize.Medium" class="my-1 ms-1" Click="@(args => DeleteRowCategorySub(categorySub))" @onclick:stopPropagation="true"></RadzenButton>
                                                                            }
                                                                        </Template>

                                                                        <EditTemplate Context="categorySub">
                                                                            @if (_authorizationService.HasPermission("res:categorysub", "scopes:update"))
                                                                            {
                                                                                <RadzenButton Icon="check" ButtonStyle="ButtonStyle.Success" Style="border-radius: 50%;" Variant="Variant.Flat" Size="ButtonSize.Medium" Click="@((args) => SaveRowCategorySub(categorySub))"></RadzenButton>
                                                                                <RadzenButton Icon="close" ButtonStyle="ButtonStyle.Light" Style="border-radius: 50%;" Variant="Variant.Flat" Size="ButtonSize.Medium" class="my-1 ms-1" Click="@((args) => CancelEditCategorySub(categorySub))"></RadzenButton>
                                                                            }
                                                                            @if (_authorizationService.HasPermission("res:categorysub", "scopes:delete"))
                                                                            {
                                                                                <RadzenButton ButtonStyle="ButtonStyle.Danger" Style="border-radius: 50%;" Icon="delete" Variant="Variant.Flat" Shade="Shade.Lighter" Size="ButtonSize.Medium" class="my-1 ms-1" Click="@(args => DeleteRowCategorySub(categorySub))"></RadzenButton>
                                                                            }
                                                                        </EditTemplate>

                                                                    </RadzenDataGridColumn>
                                                                </Columns>
                                                            </RadzenDataGrid>
                                                        </RadzenTabsItem>
                                                    </Tabs>
                                                </RadzenTabs>
                                            }
                                        </RadzenCard>
                                    </div>
                                </div>
                            </div>
                        </RadzenTabsItem>
                    }




                    @if (_authorizationService.HasPermission("res:brand", "scopes:read"))
                    {
                        <RadzenTabsItem Text="Marka/ModelDto">
                            <div class="row">
                                @if (_authorizationService.HasPermission("res:brand", "scopes:read"))
                                {
                                    <div class="col-md-6">
                                        <div class="rz-shadow-4">
                                            <RadzenCard Style="margin-bottom:20px">
                                                <div style="display: flex; justify-content: space-between; align-items: center;">
                                                    <div>Ana Kategori</div>
                                                    @if (_authorizationService.HasPermission("res:brand", "scopes:create"))
                                                    {
                                                        <RadzenButton ButtonStyle="ButtonStyle.Success" Icon="add_circle_outline" class="mt-2 mb-4" Text="Yeni Marka" Click="@((args) => InsertRowBrand(new BrandDto()))" Disabled="@(brandToInsert != null || brandToUpdate != null)" />
                                                    }
                                                </div>
                                                <RadzenDataGrid @ref="brandGrid" ColumnWidth="200px" AllowFiltering="true" AllowSorting="true" RowUpdate="@OnUpdateRowBrand" RowCreate="@OnCreateRowBrand"
                                                                Data="@brandModel?.data" TItem="BrandDto" @bind-Value="@SelectedBrand" EditMode="DataGridEditMode.Single" Style="max-height: 75vh;">
                                                    <Columns>
                                                        <RadzenDataGridColumn TItem="BrandDto" Property="Id" Title="Id" Width="80px" />


                                                        <RadzenDataGridColumn TItem="BrandDto" Property="Name" Title="Marka Adı" Width="100%">
                                                            <EditTemplate Context="brand">
                                                                <RadzenTextBox @bind-Value="brand.Name" style="width: 100%" Name="Name"></RadzenTextBox>
                                                                <RadzenRequiredValidator style="display: grid" Component="Name" Text="Marka adı zorunludur" Popup="true" />
                                                            </EditTemplate>
                                                        </RadzenDataGridColumn>

                                                        <RadzenDataGridColumn TItem="BrandDto" Context="brand" Filterable="false" Sortable="false" TextAlign="TextAlign.Right" Width="156px">
                                                            <Template Context="brand">
                                                                @if (_authorizationService.HasPermission("res:brand", "scopes:update"))
                                                                {
                                                                    <RadzenButton Icon="edit" ButtonStyle="ButtonStyle.Light" Style="border-radius: 50%;" Variant="Variant.Flat" Size="ButtonSize.Medium" Click="@(args => EditRowBrand(brand))" @onclick:stopPropagation="true"></RadzenButton>
                                                                }
                                                                @if (_authorizationService.HasPermission("res:brand", "scopes:delete"))
                                                                {
                                                                    <RadzenButton ButtonStyle="ButtonStyle.Danger" Style="border-radius: 50%;" Icon="delete" Variant="Variant.Flat" Shade="Shade.Lighter" Size="ButtonSize.Medium" class="my-1 ms-1" Click="@(args => DeleteRowBrand(brand))" @onclick:stopPropagation="true"></RadzenButton>
                                                                }
                                                            </Template>

                                                            <EditTemplate Context="brand">
                                                                @if (_authorizationService.HasPermission("res:brand", "scopes:update"))
                                                                {
                                                                    <RadzenButton Icon="check" ButtonStyle="ButtonStyle.Success" Style="border-radius: 50%;" Variant="Variant.Flat" Size="ButtonSize.Medium" Click="@((args) => SaveRowBrand(brand))"></RadzenButton>
                                                                    <RadzenButton Icon="close" ButtonStyle="ButtonStyle.Light" Style="border-radius: 50%;" Variant="Variant.Flat" Size="ButtonSize.Medium" class="my-1 ms-1" Click="@((args) => CancelEditBrand(brand))"></RadzenButton>
                                                                }
                                                                @if (_authorizationService.HasPermission("res:brand", "scopes:delete"))
                                                                {
                                                                    <RadzenButton ButtonStyle="ButtonStyle.Danger" Style="border-radius: 50%;" Icon="delete" Variant="Variant.Flat" Shade="Shade.Lighter" Size="ButtonSize.Medium" class="my-1 ms-1" Click="@(args => DeleteRowBrand(brand))"></RadzenButton>
                                                                }
                                                            </EditTemplate>

                                                        </RadzenDataGridColumn>

                                                    </Columns>
                                                </RadzenDataGrid>
                                            </RadzenCard>
                                        </div>
                                    </div>
                                }

                                <div class="col-md-6">
                                    <div class="rz-shadow-4">
                                        <RadzenCard Style="margin-bottom:20px">
                                            @if (SelectedBrand != null && SelectedBrand.Any() && SelectedBrand.First().Id != 0)
                                            {
                                                <RadzenCard Style="margin-bottom:20px">
                                                    <div style="display: flex; justify-content: space-between; align-items: center;">
                                                        <div>Seçilen Marka:</div>
                                                        <div>
                                                            @if (_authorizationService.HasPermission("res:model", "scopes:create"))
                                                            {
                                                                <RadzenButton ButtonStyle="ButtonStyle.Success" Icon="add_circle_outline" class="mt-2 mb-4" Text="Yeni ModelDto" Click="@((args) => InsertRowModel(new ModelDto()))" Disabled="@(modelToInsert != null || modelToUpdate != null)" />
                                                            }
                                                        </div>
                                                    </div>
                                                    <b>@SelectedBrand.First().Name</b>
                                                </RadzenCard>

                                                <RadzenTabs>
                                                    <Tabs>
                                                        <RadzenTabsItem Text="Modeller">
                                                            <RadzenDataGrid @ref="modelGrid" AllowFiltering="true" AllowPaging="true" AllowSorting="true" Data="@(SelectedBrand?.FirstOrDefault()?.Models)" TItem="ModelDto"
                                                                            RowUpdate="@OnUpdateRowModel" RowCreate="@OnCreateRowModel" EditMode="DataGridEditMode.Single">
                                                                <Columns>
                                                                    <RadzenDataGridColumn TItem="ModelDto" Property="Id" Title="Id" />
                                                                    <RadzenDataGridColumn TItem="ModelDto" Property="Name" Title="ModelDto Adı">
                                                                        <EditTemplate Context="model">
                                                                            <RadzenTextBox @bind-Value="model.Name" style="width: 100%" Name="Name"></RadzenTextBox>
                                                                            <RadzenRequiredValidator style="display: grid" Component="Name" Text="ModelDto adı zorunludur" Popup="true" />
                                                                        </EditTemplate>
                                                                    </RadzenDataGridColumn>

                                                                    <RadzenDataGridColumn TItem="ModelDto" Property="BrandId" Title="ModelDto Id" />

                                                                    <RadzenDataGridColumn TItem="ModelDto" Context="model" Filterable="false" Sortable="false" TextAlign="TextAlign.Right" Width="156px">
                                                                        <Template Context="model">
                                                                            @if (_authorizationService.HasPermission("res:model", "scopes:update"))
                                                                            {
                                                                                <RadzenButton Icon="edit" ButtonStyle="ButtonStyle.Light" Style="border-radius: 50%;" Variant="Variant.Flat" Size="ButtonSize.Medium" Click="@(args => EditRowModel(model))" @onclick:stopPropagation="true"></RadzenButton>
                                                                            }
                                                                            @if (_authorizationService.HasPermission("res:model", "scopes:delete"))
                                                                            {
                                                                                <RadzenButton ButtonStyle="ButtonStyle.Danger" Style="border-radius: 50%;" Icon="delete" Variant="Variant.Flat" Shade="Shade.Lighter" Size="ButtonSize.Medium" class="my-1 ms-1" Click="@(args => DeleteRowModel(model))" @onclick:stopPropagation="true"></RadzenButton>
                                                                            }
                                                                        </Template>

                                                                        <EditTemplate Context="model">
                                                                            @if (_authorizationService.HasPermission("res:model", "scopes:update"))
                                                                            {
                                                                                <RadzenButton Icon="check" ButtonStyle="ButtonStyle.Success" Style="border-radius: 50%;" Variant="Variant.Flat" Size="ButtonSize.Medium" Click="@((args) => SaveRowModel(model))"></RadzenButton>
                                                                                <RadzenButton Icon="close" ButtonStyle="ButtonStyle.Light" Style="border-radius: 50%;" Variant="Variant.Flat" Size="ButtonSize.Medium" class="my-1 ms-1" Click="@((args) => CancelEditModel(model))"></RadzenButton>
                                                                            }
                                                                            @if (_authorizationService.HasPermission("res:model", "scopes:delete"))
                                                                            {
                                                                                <RadzenButton ButtonStyle="ButtonStyle.Danger" Style="border-radius: 50%;" Icon="delete" Variant="Variant.Flat" Shade="Shade.Lighter" Size="ButtonSize.Medium" class="my-1 ms-1" Click="@(args => DeleteRowModel(model))"></RadzenButton>
                                                                            }
                                                                        </EditTemplate>

                                                                    </RadzenDataGridColumn>
                                                                </Columns>
                                                            </RadzenDataGrid>
                                                        </RadzenTabsItem>
                                                    </Tabs>
                                                </RadzenTabs>
                                            }
                                        </RadzenCard>
                                    </div>
                                </div>
                            </div>
                        </RadzenTabsItem>
                    }
                </Tabs>
            </RadzenTabs>
        </div>
    }
    else
    {
        <RadzenProgressBar ProgressBarStyle="ProgressBarStyle.Primary" Value="100" ShowValue="false" Mode="ProgressBarMode.Indeterminate" />
    }
</div>

